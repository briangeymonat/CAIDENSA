using Common.Clases;
using Dominio;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace Ejemplo.Web
{
    public partial class vItinerarioModificarConsulta : System.Web.UI.Page
    {
        private static cItinerario ElItinerario;
        private static List<string> TiposDeSesion = new List<string>() { "Individual", "Grupo 2", "Grupo 3", "Taller", "PROES" };
        private static List<string> Dias = new List<string>() { "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado" };
        private static List<string> Especialidades = new List<string>() { "Psicologia", "Pedadogia", "Fisioterapia", "Fonoaudiologia", "Psicomotricidad" };
        private static List<cBeneficiario> TodosLosBenefiicarios;
        private static List<cUsuario> LosEspecialistas;
        private static List<cPlan> LosPlanes;
        private static bool modificando;
        List<string> LasHorasDesde;
        List<string> LasHorasHasta;
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!Page.IsPostBack)
            {
                modificando = false;
                ElItinerario = new cItinerario();
                ElItinerario.Codigo = int.Parse(Request.QueryString["ItinerarioId"]);
                CargarTodo();
            }

        }
        private void CargarTodo()
        {

            ElItinerario = dFachada.ItinerarioTraerEspecifico(ElItinerario);
            LosPlanes = new List<cPlan>();
            foreach (cBeneficiarioItinerario unBenIti in ElItinerario.lstBeneficiarios)
            {
                LosPlanes.Add(unBenIti.Plan);
            }
            btnModificar.Visible = !modificando;
            btnEliminar.Visible = !modificando;
            btnConfirmar.Visible = modificando;
            btnCancelar.Visible = modificando;

            CargarDdlTiposDeSesion();
            CargarDdlDias();
            CargarDdlEspecialidades();
            CargarDdlHoras();
            CargarDatos();
            grdBeneficiarios.AutoGenerateSelectButton = modificando;
            grdBeneficiariosAgregados.AutoGenerateDeleteButton = modificando;
            grdTodosEspecialistas.AutoGenerateSelectButton = modificando;
            grdEspecialistasAgregados.AutoGenerateDeleteButton = modificando;
            CargarBeneficiarios();
            CargarBeneficiariosAgregados();
            CargarEspecialistas();
            CargarEspecialistasAgregados();
            ddlTipoSesion.Enabled = modificando;
            ddlDias.Enabled = modificando;
            rdCentro.Enabled = modificando;
            ddlDesde.Enabled = modificando;
            ddlHasta.Enabled = modificando;
            txtBuscarBeneficiarios.Enabled = modificando;
            ddlPlan1.Enabled = modificando;
            ddlPlan2.Enabled = modificando;
            ddlPlan3.Enabled = modificando;
            ddlPlan4.Enabled = modificando;
            ddlPlan5.Enabled = modificando;
            ddlPlan6.Enabled = modificando;
            ddlPlan7.Enabled = modificando;
            ddlPlan8.Enabled = modificando;
            ddlEspecialidades.Enabled = modificando;
            txtComentario.Enabled = modificando;
        }
        private void CargarDatos()
        {
            switch (ElItinerario.TipoSesion)
            {
                case cUtilidades.TipoSesion.Individual:
                    ddlTipoSesion.SelectedIndex = 0;
                    break;
                case cUtilidades.TipoSesion.Grupo2:
                    ddlTipoSesion.SelectedIndex = 1;
                    break;
                case cUtilidades.TipoSesion.Grupo3:
                    ddlTipoSesion.SelectedIndex = 2;
                    break;
                case cUtilidades.TipoSesion.Taller:
                    ddlTipoSesion.SelectedIndex = 3;
                    break;
                default:
                    ddlTipoSesion.SelectedIndex = 4;
                    break;
            }
            switch (ElItinerario.Dia)
            {
                case "L":
                    ddlDias.SelectedIndex = 0;
                    break;
                case "M":
                    ddlDias.SelectedIndex = 1;
                    break;
                case "X":
                    ddlDias.SelectedIndex = 2;
                    break;
                case "J":
                    ddlDias.SelectedIndex = 3;
                    break;
                case "V":
                    ddlDias.SelectedIndex = 4;
                    break;
                case "S":
                    ddlDias.SelectedIndex = 5;
                    break;
            }
            if (ElItinerario.Centro == cUtilidades.Centro.JuanLacaze)
            {
                rdCentro.SelectedIndex = 0;
            }
            else
            {
                rdCentro.SelectedIndex = 1;
            }

            for (int i = 0; i < LasHorasDesde.Count; i++)
            {
                if (LasHorasDesde[i] == ElItinerario.HoraInicio)
                {
                    ddlDesde.SelectedIndex = i;
                }
            }
            for (int i = 0; i < LasHorasHasta.Count; i++)
            {
                if (DateTime.Parse(LasHorasHasta[i]).AddMinutes(-1) == DateTime.Parse(ElItinerario.HoraFin))
                {
                    ddlHasta.SelectedIndex = i;
                }
            }
            txtComentario.Text = ElItinerario.Comentario;
        }
        private void CargarDdlPlanes()
        {
            List<List<string>> losPlanes = new List<List<string>>();
            for (int i = 0; i < ElItinerario.lstBeneficiarios.Count; i++)
            {
                losPlanes.Add(new List<string>());
                foreach (cPlan unPlan in ElItinerario.lstBeneficiarios[i].Beneficiario.lstPlanes)
                {
                    losPlanes[i].Add(unPlan.Tipo);
                }
            }


            if(ElItinerario.lstBeneficiarios.Count>=1)
            {
                ddlPlan1.DataSource = losPlanes[0];
                ddlPlan1.DataBind();
                for (int i = 0; i < ElItinerario.lstBeneficiarios[0].Beneficiario.lstPlanes.Count; i++)
                {
                    if (ElItinerario.lstBeneficiarios[0].Beneficiario.lstPlanes[i].Codigo == ElItinerario.lstBeneficiarios[0].Plan.Codigo)
                    {
                        ddlPlan1.SelectedIndex = i;
                    }
                }
            }
            if (ElItinerario.lstBeneficiarios.Count >= 2)
            {
                ddlPlan2.DataSource = losPlanes[1];
                ddlPlan2.DataBind();
                for (int i = 0; i < ElItinerario.lstBeneficiarios[1].Beneficiario.lstPlanes.Count; i++)
                {
                    if (ElItinerario.lstBeneficiarios[1].Beneficiario.lstPlanes[i].Codigo == ElItinerario.lstBeneficiarios[1].Plan.Codigo)
                    {
                        ddlPlan2.SelectedIndex = i;
                    }
                }
            }
            if (ElItinerario.lstBeneficiarios.Count >= 3)
            {
                ddlPlan3.DataSource = losPlanes[2];
                ddlPlan3.DataBind();
                for (int i = 0; i < ElItinerario.lstBeneficiarios[2].Beneficiario.lstPlanes.Count; i++)
                {
                    if (ElItinerario.lstBeneficiarios[2].Beneficiario.lstPlanes[i].Codigo == ElItinerario.lstBeneficiarios[2].Plan.Codigo)
                    {
                        ddlPlan3.SelectedIndex = i;
                    }
                }
            }
            if (ElItinerario.lstBeneficiarios.Count >= 4)
            {

                ddlPlan4.DataSource = losPlanes[3];
                ddlPlan4.DataBind();
                for (int i = 0; i < ElItinerario.lstBeneficiarios[3].Beneficiario.lstPlanes.Count; i++)
                {
                    if (ElItinerario.lstBeneficiarios[3].Beneficiario.lstPlanes[i].Codigo == ElItinerario.lstBeneficiarios[3].Plan.Codigo)
                    {
                        ddlPlan4.SelectedIndex = i;
                    }
                }
            }
            if (ElItinerario.lstBeneficiarios.Count >= 5)
            {

                ddlPlan5.DataSource = losPlanes[4];
                ddlPlan5.DataBind();
                for (int i = 0; i < ElItinerario.lstBeneficiarios[4].Beneficiario.lstPlanes.Count; i++)
                {
                    if (ElItinerario.lstBeneficiarios[4].Beneficiario.lstPlanes[i].Codigo == ElItinerario.lstBeneficiarios[4].Plan.Codigo)
                    {
                        ddlPlan5.SelectedIndex = i;
                    }
                }
            }
            if (ElItinerario.lstBeneficiarios.Count >= 6)
            {

                ddlPlan6.DataSource = losPlanes[5];
                ddlPlan6.DataBind();
                for (int i = 0; i < ElItinerario.lstBeneficiarios[5].Beneficiario.lstPlanes.Count; i++)
                {
                    if (ElItinerario.lstBeneficiarios[5].Beneficiario.lstPlanes[i].Codigo == ElItinerario.lstBeneficiarios[5].Plan.Codigo)
                    {
                        ddlPlan6.SelectedIndex = i;
                    }
                }
            }
            if (ElItinerario.lstBeneficiarios.Count >= 7)
            {

                ddlPlan7.DataSource = losPlanes[6];
                ddlPlan7.DataBind();
                for (int i = 0; i < ElItinerario.lstBeneficiarios[6].Beneficiario.lstPlanes.Count; i++)
                {
                    if (ElItinerario.lstBeneficiarios[6].Beneficiario.lstPlanes[i].Codigo == ElItinerario.lstBeneficiarios[6].Plan.Codigo)
                    {
                        ddlPlan7.SelectedIndex = i;
                    }
                }
            }
            if (ElItinerario.lstBeneficiarios.Count == 8)
            {
                ddlPlan8.DataSource = losPlanes[7];
                ddlPlan8.DataBind();
                for (int i = 0; i < ElItinerario.lstBeneficiarios[7].Beneficiario.lstPlanes.Count; i++)
                {
                    if (ElItinerario.lstBeneficiarios[7].Beneficiario.lstPlanes[i].Codigo == ElItinerario.lstBeneficiarios[7].Plan.Codigo)
                    {
                        ddlPlan8.SelectedIndex = i;
                    }
                }
            }



            
        }
        private void CargarDdlTiposDeSesion()
        {
            ddlTipoSesion.DataSource = TiposDeSesion;
            ddlTipoSesion.DataBind();
        }
        private void CargarDdlHoras()
        {
            DateTime hora1 = DateTime.Parse("08:00");
            LasHorasDesde = new List<string>();
            LasHorasDesde.Add(hora1.ToShortTimeString());
            do
            {
                hora1 = hora1.AddMinutes(15);
                LasHorasDesde.Add(hora1.ToShortTimeString());
            } while (hora1 != DateTime.Parse("19:45"));
            ddlDesde.DataSource = LasHorasDesde;
            ddlDesde.DataBind();

            LasHorasHasta = new List<string>();
            DateTime hora2 = DateTime.Parse("08:15");
            LasHorasHasta.Add(hora2.ToShortTimeString());
            do
            {
                hora2 = hora2.AddMinutes(15);
                LasHorasHasta.Add(hora2.ToShortTimeString());
            } while (hora2 != DateTime.Parse("20:00"));
            ddlHasta.DataSource = LasHorasHasta;
            ddlHasta.DataBind();


        }
        private bool VerificarCantidadAgregados()
        {
            switch (ddlTipoSesion.SelectedValue.ToString())
            {
                case "Individual":
                    if (ElItinerario.lstBeneficiarios.Count == 1) return true;
                    else return false;
                case "Grupo 2":
                    if (ElItinerario.lstBeneficiarios.Count == 2) return true;
                    else return false;
                case "Grupo 3":
                    if (ElItinerario.lstBeneficiarios.Count == 3) return true;
                    else return false;
                case "Taller":
                    if (ElItinerario.lstBeneficiarios.Count == 4) return true;
                    else return false;
                case "PROES":
                    if (ElItinerario.lstBeneficiarios.Count <= 8 && ElItinerario.lstBeneficiarios.Count >= 5 && ElItinerario.lstEspecialistas.Count==2) return true;
                    else return false;
                default:
                    return false;
            }
        }
        private void CargarDdlDias()
        {
            ddlDias.DataSource = Dias;
            ddlDias.DataBind();
        }
        private void CargarDdlEspecialidades()
        {
            ddlEspecialidades.DataSource = Especialidades;
            ddlEspecialidades.DataBind();
        }
        private void CargarBeneficiarios()
        {
            string Consulta = "SELECT DISTINCT B.* FROM Beneficiarios B JOIN Planes P ON B.BeneficiarioId = P.BeneficiarioId WHERE B.BeneficiarioEstado = 1 AND P.PlanActivo = 1";
            if (txtBuscarBeneficiarios.Text != string.Empty)
            {
                Consulta += string.Format("AND (B.BeneficiarioNombres LIKE '{0}%' or B.BeneficiarioApellidos LIKE '{0}%' or CONVERT(varchar, B.BeneficiarioCI) LIKE '{0}%' )", txtBuscarBeneficiarios.Text);
            }
            if (ElItinerario.lstBeneficiarios.Count > 0)
            {
                for (int i = 0; i < ElItinerario.lstBeneficiarios.Count; i++)
                {
                    Consulta += " AND B.BeneficiarioId != " + ElItinerario.lstBeneficiarios[i].Beneficiario.Codigo.ToString();
                }
            }
            TodosLosBenefiicarios = dFachada.BeneficiarioTraerTodosConFiltros(Consulta);
            grdBeneficiarios.DataSource = TodosLosBenefiicarios;
            grdBeneficiarios.DataBind();
        }
        private void CargarBeneficiariosAgregados()
        {
            for (int i = 0; i < ElItinerario.lstBeneficiarios.Count; i++)
            {
                ElItinerario.lstBeneficiarios[i].Beneficiario.lstPlanes = dFachada.PlanTraerActivosPorBeneficiario(ElItinerario.lstBeneficiarios[i].Beneficiario);
            }
            List<cBeneficiario> lstBeneficiariosAgregados = new List<cBeneficiario>();
            foreach (cBeneficiarioItinerario unBenIt in ElItinerario.lstBeneficiarios)
            {
                lstBeneficiariosAgregados.Add(unBenIt.Beneficiario);
            }
            grdBeneficiariosAgregados.DataSource = lstBeneficiariosAgregados;
            grdBeneficiariosAgregados.DataBind();

            #region Mostrar/Ocultar DdlPlanes


            switch (ElItinerario.lstBeneficiarios.Count)
            {
                case 1:
                    ddlPlan1.Visible = true;
                    ddlPlan2.Visible = false;
                    ddlPlan3.Visible = false;
                    ddlPlan4.Visible = false;
                    ddlPlan5.Visible = false;
                    ddlPlan6.Visible = false;
                    ddlPlan7.Visible = false;
                    ddlPlan8.Visible = false;
                    lblNombre1.Visible = true;
                    lblNombre2.Visible = false;
                    lblNombre3.Visible = false;
                    lblNombre4.Visible = false;
                    lblNombre5.Visible = false;
                    lblNombre6.Visible = false;
                    lblNombre7.Visible = false;
                    lblNombre8.Visible = false;
                    lblNombre1.Text = ElItinerario.lstBeneficiarios[0].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[0].Beneficiario.Apellidos;
                    break;
                case 2:
                    ddlPlan1.Visible = true;
                    ddlPlan2.Visible = true;
                    ddlPlan3.Visible = false;
                    ddlPlan4.Visible = false;
                    ddlPlan5.Visible = false;
                    ddlPlan6.Visible = false;
                    ddlPlan7.Visible = false;
                    ddlPlan8.Visible = false;
                    lblNombre1.Visible = true;
                    lblNombre2.Visible = true;
                    lblNombre3.Visible = false;
                    lblNombre4.Visible = false;
                    lblNombre5.Visible = false;
                    lblNombre6.Visible = false;
                    lblNombre7.Visible = false;
                    lblNombre8.Visible = false;
                    lblNombre1.Text = ElItinerario.lstBeneficiarios[0].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[0].Beneficiario.Apellidos;
                    lblNombre2.Text = ElItinerario.lstBeneficiarios[1].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[1].Beneficiario.Apellidos;
                    break;
                case 3:
                    ddlPlan1.Visible = true;
                    ddlPlan2.Visible = true;
                    ddlPlan3.Visible = true;
                    ddlPlan4.Visible = false;
                    ddlPlan5.Visible = false;
                    ddlPlan6.Visible = false;
                    ddlPlan7.Visible = false;
                    ddlPlan8.Visible = false;
                    lblNombre1.Visible = true;
                    lblNombre2.Visible = true;
                    lblNombre3.Visible = true;
                    lblNombre4.Visible = false;
                    lblNombre5.Visible = false;
                    lblNombre6.Visible = false;
                    lblNombre7.Visible = false;
                    lblNombre8.Visible = false;
                    lblNombre1.Text = ElItinerario.lstBeneficiarios[0].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[0].Beneficiario.Apellidos;
                    lblNombre2.Text = ElItinerario.lstBeneficiarios[1].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[1].Beneficiario.Apellidos;
                    lblNombre3.Text = ElItinerario.lstBeneficiarios[2].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[2].Beneficiario.Apellidos;
                    break;
                case 4:
                    ddlPlan1.Visible = true;
                    ddlPlan2.Visible = true;
                    ddlPlan3.Visible = true;
                    ddlPlan4.Visible = true;
                    ddlPlan5.Visible = false;
                    ddlPlan6.Visible = false;
                    ddlPlan7.Visible = false;
                    ddlPlan8.Visible = false;
                    lblNombre1.Visible = true;
                    lblNombre2.Visible = true;
                    lblNombre3.Visible = true;
                    lblNombre4.Visible = true;
                    lblNombre5.Visible = false;
                    lblNombre6.Visible = false;
                    lblNombre7.Visible = false;
                    lblNombre8.Visible = false;
                    lblNombre1.Text = ElItinerario.lstBeneficiarios[0].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[0].Beneficiario.Apellidos;
                    lblNombre2.Text = ElItinerario.lstBeneficiarios[1].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[1].Beneficiario.Apellidos;
                    lblNombre3.Text = ElItinerario.lstBeneficiarios[2].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[2].Beneficiario.Apellidos;
                    lblNombre4.Text = ElItinerario.lstBeneficiarios[3].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[3].Beneficiario.Apellidos;
                    break;
                case 5:
                    ddlPlan1.Visible = true;
                    ddlPlan2.Visible = true;
                    ddlPlan3.Visible = true;
                    ddlPlan4.Visible = true;
                    ddlPlan5.Visible = true;
                    ddlPlan6.Visible = false;
                    ddlPlan7.Visible = false;
                    ddlPlan8.Visible = false;
                    lblNombre1.Visible = true;
                    lblNombre2.Visible = true;
                    lblNombre3.Visible = true;
                    lblNombre4.Visible = true;
                    lblNombre5.Visible = true;
                    lblNombre6.Visible = false;
                    lblNombre7.Visible = false;
                    lblNombre8.Visible = false;
                    lblNombre1.Text = ElItinerario.lstBeneficiarios[0].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[0].Beneficiario.Apellidos;
                    lblNombre2.Text = ElItinerario.lstBeneficiarios[1].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[1].Beneficiario.Apellidos;
                    lblNombre3.Text = ElItinerario.lstBeneficiarios[2].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[2].Beneficiario.Apellidos;
                    lblNombre4.Text = ElItinerario.lstBeneficiarios[3].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[3].Beneficiario.Apellidos;
                    lblNombre5.Text = ElItinerario.lstBeneficiarios[4].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[4].Beneficiario.Apellidos;
                    break;
                case 6:
                    ddlPlan1.Visible = true;
                    ddlPlan2.Visible = true;
                    ddlPlan3.Visible = true;
                    ddlPlan4.Visible = true;
                    ddlPlan5.Visible = true;
                    ddlPlan6.Visible = true;
                    ddlPlan7.Visible = false;
                    ddlPlan8.Visible = false;
                    lblNombre1.Visible = true;
                    lblNombre2.Visible = true;
                    lblNombre3.Visible = true;
                    lblNombre4.Visible = true;
                    lblNombre5.Visible = true;
                    lblNombre6.Visible = true;
                    lblNombre7.Visible = false;
                    lblNombre8.Visible = false;
                    lblNombre1.Text = ElItinerario.lstBeneficiarios[0].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[0].Beneficiario.Apellidos;
                    lblNombre2.Text = ElItinerario.lstBeneficiarios[1].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[1].Beneficiario.Apellidos;
                    lblNombre3.Text = ElItinerario.lstBeneficiarios[2].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[2].Beneficiario.Apellidos;
                    lblNombre4.Text = ElItinerario.lstBeneficiarios[3].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[3].Beneficiario.Apellidos;
                    lblNombre5.Text = ElItinerario.lstBeneficiarios[4].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[4].Beneficiario.Apellidos;
                    lblNombre6.Text = ElItinerario.lstBeneficiarios[5].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[5].Beneficiario.Apellidos;
                    break;
                case 7:
                    ddlPlan1.Visible = true;
                    ddlPlan2.Visible = true;
                    ddlPlan3.Visible = true;
                    ddlPlan4.Visible = true;
                    ddlPlan5.Visible = true;
                    ddlPlan6.Visible = true;
                    ddlPlan7.Visible = true;
                    ddlPlan8.Visible = false;
                    lblNombre1.Visible = true;
                    lblNombre2.Visible = true;
                    lblNombre3.Visible = true;
                    lblNombre4.Visible = true;
                    lblNombre5.Visible = true;
                    lblNombre6.Visible = true;
                    lblNombre7.Visible = true;
                    lblNombre8.Visible = false;
                    lblNombre1.Text = ElItinerario.lstBeneficiarios[0].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[0].Beneficiario.Apellidos;
                    lblNombre2.Text = ElItinerario.lstBeneficiarios[1].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[1].Beneficiario.Apellidos;
                    lblNombre3.Text = ElItinerario.lstBeneficiarios[2].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[2].Beneficiario.Apellidos;
                    lblNombre4.Text = ElItinerario.lstBeneficiarios[3].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[3].Beneficiario.Apellidos;
                    lblNombre5.Text = ElItinerario.lstBeneficiarios[4].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[4].Beneficiario.Apellidos;
                    lblNombre6.Text = ElItinerario.lstBeneficiarios[5].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[5].Beneficiario.Apellidos;
                    lblNombre7.Text = ElItinerario.lstBeneficiarios[6].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[6].Beneficiario.Apellidos;
                    break;
                case 8:
                    ddlPlan1.Visible = true;
                    ddlPlan2.Visible = true;
                    ddlPlan3.Visible = true;
                    ddlPlan4.Visible = true;
                    ddlPlan5.Visible = true;
                    ddlPlan6.Visible = true;
                    ddlPlan7.Visible = true;
                    ddlPlan8.Visible = true;
                    lblNombre1.Visible = true;
                    lblNombre2.Visible = true;
                    lblNombre3.Visible = true;
                    lblNombre4.Visible = true;
                    lblNombre5.Visible = true;
                    lblNombre6.Visible = true;
                    lblNombre7.Visible = true;
                    lblNombre8.Visible = true;
                    lblNombre1.Text = ElItinerario.lstBeneficiarios[0].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[0].Beneficiario.Apellidos;
                    lblNombre2.Text = ElItinerario.lstBeneficiarios[1].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[1].Beneficiario.Apellidos;
                    lblNombre3.Text = ElItinerario.lstBeneficiarios[2].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[2].Beneficiario.Apellidos;
                    lblNombre4.Text = ElItinerario.lstBeneficiarios[3].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[3].Beneficiario.Apellidos;
                    lblNombre5.Text = ElItinerario.lstBeneficiarios[4].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[4].Beneficiario.Apellidos;
                    lblNombre6.Text = ElItinerario.lstBeneficiarios[5].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[5].Beneficiario.Apellidos;
                    lblNombre7.Text = ElItinerario.lstBeneficiarios[6].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[6].Beneficiario.Apellidos;
                    lblNombre8.Text = ElItinerario.lstBeneficiarios[7].Beneficiario.Nombres + " " + ElItinerario.lstBeneficiarios[7].Beneficiario.Apellidos;
                    break;
                default:
                    ddlPlan1.Visible = false;
                    ddlPlan2.Visible = false;
                    ddlPlan3.Visible = false;
                    ddlPlan4.Visible = false;
                    ddlPlan5.Visible = false;
                    ddlPlan6.Visible = false;
                    ddlPlan7.Visible = false;
                    ddlPlan8.Visible = false;
                    lblNombre1.Visible = false;
                    lblNombre2.Visible = false;
                    lblNombre3.Visible = false;
                    lblNombre4.Visible = false;
                    lblNombre5.Visible = false;
                    lblNombre6.Visible = false;
                    lblNombre7.Visible = false;
                    lblNombre8.Visible = false;
                    break;

            }
            #endregion

            CargarDdlPlanes();

        }

        


        private void CargarEspecialistas()
        {
            cEspecialidad unaEspecialidad = new cEspecialidad();
            unaEspecialidad.Nombre = ddlEspecialidades.SelectedValue.ToString();
            unaEspecialidad = dFachada.EspecialidadTraerEspecificaPorNombre(unaEspecialidad);


            string Consulta = "SELECT U.*, E.EspecialidadNombre FROM Usuarios U JOIN Especialidades E ON U.EspecialidadId=E.EspecialidadId" +
                " WHERE UsuarioEstado = 1 AND E.EspecialidadId = " + unaEspecialidad.Codigo.ToString();
            if (ElItinerario.lstEspecialistas.Count > 0)
            {
                for (int i = 0; i < ElItinerario.lstEspecialistas.Count; i++)
                {
                    Consulta += " AND UsuarioId != " + ElItinerario.lstEspecialistas[i].Codigo.ToString();
                }
            }
            LosEspecialistas = dFachada.UsuarioTraerEspecialistasConFiltros(Consulta);
            grdTodosEspecialistas.DataSource = LosEspecialistas;
            grdTodosEspecialistas.DataBind();
        }
        private void CargarEspecialistasAgregados()
        {
            grdEspecialistasAgregados.DataSource = ElItinerario.lstEspecialistas;
            grdEspecialistasAgregados.DataBind();
        }

        protected void grdTodosEspecialistas_RowCreated(object sender, GridViewRowEventArgs e)
        {

            int i = 0;
            if (modificando)
            {
                i = 1;
            }
            e.Row.Cells[0 + i].Visible = false; //Codigo
            e.Row.Cells[1 + i].Visible = false; //NickName
            e.Row.Cells[2 + i].Visible = false; //Contrasena
            e.Row.Cells[6 + i].Visible = false; //TipoUsuario
            e.Row.Cells[7 + i].Visible = false; //Domicilio
            e.Row.Cells[8 + i].Visible = false; //FechaNacimiento
            e.Row.Cells[10 + i].Visible = false; //Email
            e.Row.Cells[11 + i].Visible = false; //Estado
            e.Row.Cells[12 + i].Visible = false; //TipoContrato

        }

        protected void grdEspecialistasAgregados_RowCreated(object sender, GridViewRowEventArgs e)
        {

            int i = 0;
            if (modificando)
            {
                i = 1;
            }
            e.Row.Cells[0 + i].Visible = false; //Codigo
            e.Row.Cells[1 + i].Visible = false; //NickName
            e.Row.Cells[2 + i].Visible = false; //Contrasena
            e.Row.Cells[6 + i].Visible = false; //TipoUsuario
            e.Row.Cells[7 + i].Visible = false; //Domicilio
            e.Row.Cells[8 + i].Visible = false; //FechaNacimiento
            e.Row.Cells[10 + i].Visible = false; //Email
            e.Row.Cells[11 + i].Visible = false; //Estado
            e.Row.Cells[12 + i].Visible = false; //TipoContrato

        }

        protected void grdBeneficiariosCargados_RowCreated(object sender, GridViewRowEventArgs e)
        {
            int i = 0;
            if (modificando)
            {
                i = 1;
            }
            e.Row.Cells[0 + i].Visible = false; //codigo
            e.Row.Cells[4 + i].Visible = false; //sexo
            e.Row.Cells[6 + i].Visible = false; //tel2
            e.Row.Cells[7 + i].Visible = false;//email
            e.Row.Cells[8 + i].Visible = false;//domicilio
            e.Row.Cells[9 + i].Visible = false;//fecha de nacimiento
            e.Row.Cells[10 + i].Visible = false;//atributario
            e.Row.Cells[11 + i].Visible = false;//motivo consulta
            e.Row.Cells[12 + i].Visible = false;//escolaridad
            e.Row.Cells[13 + i].Visible = false;//derivador
            e.Row.Cells[14 + i].Visible = false;//estado
        }

        protected void grdBeneficiarios_RowCreated(object sender, GridViewRowEventArgs e)
        {
            int i = 0;
            if (modificando)
            {
                i = 1;
            }
            e.Row.Cells[0 + i].Visible = false; //codigo
            e.Row.Cells[4 + i].Visible = false; //sexo
            e.Row.Cells[6 + i].Visible = false; //tel2
            e.Row.Cells[7 + i].Visible = false;//email
            e.Row.Cells[8 + i].Visible = false;//domicilio
            e.Row.Cells[9 + i].Visible = false;//fecha de nacimiento
            e.Row.Cells[10 + i].Visible = false;//atributario
            e.Row.Cells[11 + i].Visible = false;//motivo consulta
            e.Row.Cells[12 + i].Visible = false;//escolaridad
            e.Row.Cells[13 + i].Visible = false;//derivador
            e.Row.Cells[14 + i].Visible = false;//estado
        }

        protected void btnModificar_Click(object sender, EventArgs e)
        {
            modificando = true;
            CargarTodo();
        }

        protected void btnCancelar_Click(object sender, EventArgs e)
        {
            modificando = false;
            CargarTodo();
        }

        protected void grdBeneficiarios_SelectedIndexChanging(object sender, GridViewSelectEventArgs e)
        {
            cBeneficiarioItinerario unBenIt = new cBeneficiarioItinerario();
            unBenIt.Beneficiario = TodosLosBenefiicarios[e.NewSelectedIndex];
            unBenIt.Plan = TodosLosBenefiicarios[e.NewSelectedIndex].lstPlanes[0];
            ElItinerario.lstBeneficiarios.Add(unBenIt);
            LosPlanes.Add(TodosLosBenefiicarios[e.NewSelectedIndex].lstPlanes[0]);
            CargarBeneficiariosAgregados();
            CargarBeneficiarios();

            if (ElItinerario.lstBeneficiarios.Count <= 0)
                lblSeleccionarPlan.Visible = false;
            else
                lblSeleccionarPlan.Visible = true;
        }

        protected void grdBeneficiariosAgregados_RowDeleting(object sender, GridViewDeleteEventArgs e)
        {
            ElItinerario.lstBeneficiarios.RemoveAt(e.RowIndex);
            CargarBeneficiariosAgregados();
            CargarBeneficiarios();
            if (ElItinerario.lstBeneficiarios.Count <= 0)
                lblSeleccionarPlan.Visible = false;
            else
                lblSeleccionarPlan.Visible = true;
        }

        protected void grdTodosEspecialistas_SelectedIndexChanging(object sender, GridViewSelectEventArgs e)
        {
            ElItinerario.lstEspecialistas.Add(LosEspecialistas[e.NewSelectedIndex]);
            CargarEspecialistasAgregados();
            CargarEspecialistas();
        }

        protected void grdEspecialistasAgregados_RowDeleting(object sender, GridViewDeleteEventArgs e)
        {
            ElItinerario.lstEspecialistas.RemoveAt(e.RowIndex);
            CargarEspecialistasAgregados();
            CargarEspecialistas();
        }

        private bool FaltanDatos()
        {
            if (ElItinerario.lstBeneficiarios.Count <= 0 ||
                ElItinerario.lstEspecialistas.Count <= 0)
                return true;
            return false;
        }
        protected void btnConfirmar_Click(object sender, EventArgs e)
        {
            if(!FaltanDatos())
            {
                if(!VerificarCantidadAgregados())
                {
                    ClientScript.RegisterClientScriptBlock(GetType(), "alert", "alert('ERROR: El número de beneficiarios no coincide con el tipo de sesión.')", true);
                }
                else
                {
                    //              ↓↓↓↓↓↓↓CARGA DE DATOS NUEVOS↓↓↓↓↓↓

                    //TIPO DE SESION
                    switch (ddlTipoSesion.SelectedValue.ToString())
                    {
                        case "Individual":
                            ElItinerario.TipoSesion = cUtilidades.TipoSesion.Individual;
                            break;
                        case "Grupo 2":
                            ElItinerario.TipoSesion = cUtilidades.TipoSesion.Grupo2;
                            break;
                        case "Grupo 3":
                            ElItinerario.TipoSesion = cUtilidades.TipoSesion.Grupo3;
                            break;
                        case "Taller":
                            ElItinerario.TipoSesion = cUtilidades.TipoSesion.Taller;
                            break;
                        case "PROES":
                            ElItinerario.TipoSesion = cUtilidades.TipoSesion.PROES;
                            break;
                    }

                    //DIA
                    switch (ddlDias.SelectedValue.ToString())
                    {
                        case "Lunes":
                            ElItinerario.Dia = "L";
                            break;
                        case "Martes":
                            ElItinerario.Dia = "M";
                            break;
                        case "Miercoles":
                            ElItinerario.Dia = "X";
                            break;
                        case "Jueves":
                            ElItinerario.Dia = "J";
                            break;
                        case "Viernes":
                            ElItinerario.Dia = "V";
                            break;
                        case "Sabado":
                            ElItinerario.Dia = "S";
                            break;
                    }

                    //CENTRO
                    if (rdCentro.SelectedIndex == 0) ElItinerario.Centro = cUtilidades.Centro.JuanLacaze;
                    else ElItinerario.Centro = cUtilidades.Centro.NuevaHelvecia;

                    if (DateTime.Parse(ddlDesde.SelectedValue) >= DateTime.Parse(ddlHasta.SelectedValue))
                    {
                        ClientScript.RegisterClientScriptBlock(GetType(), "alert", "alert('ERROR: La fecha de fin de la sesión debe ser mayor a la de inicio.')", true);
                    }
                    else
                    {
                        // HORARIO
                        ElItinerario.HoraInicio = ddlDesde.SelectedValue;
                        ElItinerario.HoraFin = DateTime.Parse(ddlHasta.SelectedValue).AddMinutes(-1).ToShortTimeString();

                        // PLANES DE LOS BENEFICIARIOS
                        for (int i = 0; i < ElItinerario.lstBeneficiarios.Count; i++)
                        {
                            ElItinerario.lstBeneficiarios[i].Plan = LosPlanes[i];
                            switch (i)
                            {
                                case 0:
                                    ElItinerario.lstBeneficiarios[i].Plan = ElItinerario.lstBeneficiarios[i].Beneficiario.lstPlanes[ddlPlan1.SelectedIndex];
                                    break;
                                case 1:
                                    ElItinerario.lstBeneficiarios[i].Plan = ElItinerario.lstBeneficiarios[i].Beneficiario.lstPlanes[ddlPlan2.SelectedIndex];
                                    break;
                                case 2:
                                    ElItinerario.lstBeneficiarios[i].Plan = ElItinerario.lstBeneficiarios[i].Beneficiario.lstPlanes[ddlPlan3.SelectedIndex];
                                    break;
                                case 3:
                                    ElItinerario.lstBeneficiarios[i].Plan = ElItinerario.lstBeneficiarios[i].Beneficiario.lstPlanes[ddlPlan4.SelectedIndex];
                                    break;
                                case 4:
                                    ElItinerario.lstBeneficiarios[i].Plan = ElItinerario.lstBeneficiarios[i].Beneficiario.lstPlanes[ddlPlan5.SelectedIndex];
                                    break;
                                case 5:
                                    ElItinerario.lstBeneficiarios[i].Plan = ElItinerario.lstBeneficiarios[i].Beneficiario.lstPlanes[ddlPlan6.SelectedIndex];
                                    break;
                                case 6:
                                    ElItinerario.lstBeneficiarios[i].Plan = ElItinerario.lstBeneficiarios[i].Beneficiario.lstPlanes[ddlPlan7.SelectedIndex];
                                    break;
                                case 7:
                                    ElItinerario.lstBeneficiarios[i].Plan = ElItinerario.lstBeneficiarios[i].Beneficiario.lstPlanes[ddlPlan8.SelectedIndex];
                                    break;
                                default:
                                    break;
                            }
                        }
                        // COMENTARIO
                        ElItinerario.Comentario = txtComentario.Text;

                        // VERIFICARO HORARIO DE ESPECIALISTAS Y BENEFICIARIOS
                        List<cUsuario> EspecialistasNoDisponibles = dFachada.ItinerarioVerificarHorarioUsuarioModificar(ElItinerario);
                        List<cBeneficiario> BeneficiariosNoDisponibles = dFachada.ItinerarioVerificarHorarioBeneficiariosModificar(ElItinerario);
                        string especialistas = "";
                        string beneficiarios = "";

                        //ESPECIALISTAS NO DISPONIBLES
                        if (EspecialistasNoDisponibles.Count > 0)
                        {
                            if (EspecialistasNoDisponibles.Count > 1)
                            {
                                especialistas += "Los especialistas ";
                            }
                            for (int i = 0; i < EspecialistasNoDisponibles.Count; i++)
                            {
                                if (i == EspecialistasNoDisponibles.Count - 1)
                                {
                                    especialistas += EspecialistasNoDisponibles[i].Nombres + " " + EspecialistasNoDisponibles[i].Apellidos;
                                }
                                else if (i == 0)
                                {
                                    especialistas += EspecialistasNoDisponibles[i].Nombres + " " + EspecialistasNoDisponibles[i].Apellidos + ", ";
                                }
                                else if (i == EspecialistasNoDisponibles.Count - 2)
                                {
                                    especialistas += EspecialistasNoDisponibles[i].Nombres + " " + EspecialistasNoDisponibles[i].Apellidos + " y ";
                                }
                            }
                            if (EspecialistasNoDisponibles.Count > 1)
                            {
                                especialistas += " no están disponibles para la sesión.";
                            }
                            else
                            {
                                especialistas += " no está disponible para la sesión.";
                            }
                        }

                        //BENEFICIARIOS NO DISPONIBLES

                        if (BeneficiariosNoDisponibles.Count > 0)
                        {
                            if (EspecialistasNoDisponibles.Count > 1)
                            {
                                beneficiarios += "Los beneficiarios ";
                            }
                            for (int i = 0; i < BeneficiariosNoDisponibles.Count; i++)
                            {
                                if (i == BeneficiariosNoDisponibles.Count - 1)
                                {
                                    beneficiarios += BeneficiariosNoDisponibles[i].Nombres + " " + BeneficiariosNoDisponibles[i].Apellidos;
                                }
                                else if (i == 0)
                                {
                                    beneficiarios += BeneficiariosNoDisponibles[i].Nombres + " " + BeneficiariosNoDisponibles[i].Apellidos + ", ";
                                }
                                else if (i == BeneficiariosNoDisponibles.Count - 2)
                                {
                                    beneficiarios += BeneficiariosNoDisponibles[i].Nombres + " " + BeneficiariosNoDisponibles[i].Apellidos + " y ";
                                }
                            }
                            if (BeneficiariosNoDisponibles.Count > 1)
                            {
                                beneficiarios += " no están disponibles para la sesión.";
                            }
                            else
                            {
                                beneficiarios += " no está disponible para la sesión.";
                            }
                        }
                        if (EspecialistasNoDisponibles.Count > 0 || BeneficiariosNoDisponibles.Count > 0)
                        {
                            ClientScript.RegisterClientScriptBlock(GetType(), "alert", string.Format("alert('ERROR: {0}{1} Su horario coincide con el de otra sesión.')", especialistas, beneficiarios), true);
                        }
                        else
                        {
                            if (dFachada.ItinerarioModificar(ElItinerario)) { modificando = false; CargarTodo(); dFachada.SesionAgregarSesionesDelDia(); }
                            else
                            {
                                ClientScript.RegisterClientScriptBlock(GetType(), "alert", "alert('ERROR: No se pudo modificar la sesión del itinerario.')", true);
                            }
                        }
                    }
                }
            }
            else
            {
                ClientScript.RegisterClientScriptBlock(GetType(), "alert", "alert('ERROR: Faltan datos.')", true);
            }
        }

        protected void btnEliminar_Click(object sender, EventArgs e)
        {
            if (dFachada.ItinerarioEliminar(ElItinerario))
            {
                Response.Redirect("vItinerarioDiario.aspx");
            }
            else
            {
                ClientScript.RegisterClientScriptBlock(GetType(), "alert", "alert('ERROR: No se pudo eliminar la sesión del Itinerario.')", true);
            }
                
        }

        protected void txtBuscarBeneficiarios_TextChanged(object sender, EventArgs e)
        {
            CargarBeneficiarios();
        }

        protected void ddlEspecialidades_SelectedIndexChanged(object sender, EventArgs e)
        {
            CargarEspecialistas();
        }
    }
}